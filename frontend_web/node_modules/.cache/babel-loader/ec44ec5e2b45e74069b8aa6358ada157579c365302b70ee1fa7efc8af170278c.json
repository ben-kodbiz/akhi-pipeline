{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8001';\nconst api = axios.create({\n  baseURL: API_URL\n});\nexport const getStatus = async () => {\n  const response = await api.get('/api/status');\n  return response.data;\n};\nexport const downloadVideos = async linksData => {\n  try {\n    console.log('API service sending:', linksData);\n    const response = await api.post('/api/videos/download', linksData);\n    console.log('API service received:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('API service error:', error);\n    // Rethrow with more detailed error information\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error('Response error data:', error.response.data);\n      throw error;\n    } else if (error.request) {\n      // The request was made but no response was received\n      throw new Error('Network error - no response received from server');\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      throw new Error('Error setting up request: ' + error.message);\n    }\n  }\n};\nexport const transcribeVideos = async () => {\n  const response = await api.post('/api/transcribe');\n  return response.data;\n};\nexport const generateJson = async () => {\n  const response = await api.post('/api/generate-json');\n  return response.data;\n};\nexport const getTranscripts = async () => {\n  const response = await api.get('/api/transcripts');\n  return response.data;\n};\nexport const getTranscript = async fileName => {\n  const response = await api.get(`/api/transcripts/${fileName}`);\n  return response.data;\n};\nexport const updateTranscript = async (fileName, content) => {\n  const response = await api.post(`/api/transcripts/${fileName}`, {\n    file_name: fileName,\n    content\n  });\n  return response.data;\n};\nexport const getJson = async () => {\n  const response = await api.get('/api/json');\n  return response.data;\n};\nexport const resetData = async () => {\n  const response = await api.delete('/api/reset');\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","getStatus","response","get","data","downloadVideos","linksData","console","log","post","error","request","Error","message","transcribeVideos","generateJson","getTranscripts","getTranscript","fileName","updateTranscript","content","file_name","getJson","resetData","delete"],"sources":["/data/work/dev/akhi_data_builder/frontend_web/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8001';\n\nconst api = axios.create({\n  baseURL: API_URL,\n});\n\nexport const getStatus = async () => {\n  const response = await api.get('/api/status');\n  return response.data;\n};\n\nexport const downloadVideos = async (linksData) => {\n  try {\n    console.log('API service sending:', linksData);\n    const response = await api.post('/api/videos/download', linksData);\n    console.log('API service received:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('API service error:', error);\n    // Rethrow with more detailed error information\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error('Response error data:', error.response.data);\n      throw error;\n    } else if (error.request) {\n      // The request was made but no response was received\n      throw new Error('Network error - no response received from server');\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      throw new Error('Error setting up request: ' + error.message);\n    }\n  }\n};\n\nexport const transcribeVideos = async () => {\n  const response = await api.post('/api/transcribe');\n  return response.data;\n};\n\nexport const generateJson = async () => {\n  const response = await api.post('/api/generate-json');\n  return response.data;\n};\n\nexport const getTranscripts = async () => {\n  const response = await api.get('/api/transcripts');\n  return response.data;\n};\n\nexport const getTranscript = async (fileName) => {\n  const response = await api.get(`/api/transcripts/${fileName}`);\n  return response.data;\n};\n\nexport const updateTranscript = async (fileName, content) => {\n  const response = await api.post(`/api/transcripts/${fileName}`, {\n    file_name: fileName,\n    content,\n  });\n  return response.data;\n};\n\nexport const getJson = async () => {\n  const response = await api.get('/api/json');\n  return response.data;\n};\n\nexport const resetData = async () => {\n  const response = await api.delete('/api/reset');\n  return response.data;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}